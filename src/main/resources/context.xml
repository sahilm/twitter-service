<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    <context:component-scan base-package="com.sahilm"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>file:${APP_HOME}/redis.properties</value>
                <value>file:${APP_HOME}/twitter4j.properties</value>
            </list>
        </property>
    </bean>

    <bean id="twitterConfigurationBuilder" class="twitter4j.conf.ConfigurationBuilder">
        <property name="debugEnabled" value="true"/>
        <property name="OAuthConsumerKey" value="${twitter4j.oauth.consumerKey:consumerKey}"/>
        <property name="OAuthConsumerSecret" value="${twitter4j.oauth.consumerSecret:consumerSecret}"/>
        <property name="OAuthAccessToken" value="${twitter4j.oauth.accessToken:accessToken}"/>
        <property name="OAuthAccessTokenSecret" value="${twitter4j.oauth.accessTokenSecret:accessTokenSecret}"/>
    </bean>

    <bean id="twitterConfiguration" class="twitter4j.conf.ConfigurationBase" factory-bean="twitterConfigurationBuilder"
          factory-method="build"/>

    <bean id="twitterFactory" class="twitter4j.TwitterFactory">
        <constructor-arg ref="twitterConfiguration"/>
    </bean>


    <bean id="twitterClient"
          factory-bean="twitterFactory" factory-method="getInstance"
          depends-on="twitterFactory"/>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host:localhost}" p:port="${redis.port:6379}" p:usePool="true">
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory">
        <property name="valueSerializer">
            <bean id="jackson2JsonRedisSerializer"
                  class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">
                <constructor-arg type="java.lang.Class" value="java.lang.Object"/>
            </bean>
        </property>
    </bean>

    <mvc:annotation-driven/>
    <cache:annotation-driven/>
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate"/>
        <property name="defaultExpiration" value="300"/>
    </bean>
    <import resource="test.xml"/>
</beans>
